macro(mkheader arg1)
  set(HEADER_FILE "${arg1}.h")
  file(WRITE ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB H_FILES "${arg1}/*.h")
  list(LENGTH H_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    foreach(HEADER ${H_FILES}) 
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
  endif()

  file(GLOB HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    foreach(HEADER ${HPP_FILES})
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()
endmacro(mkheader)

macro(mkheader_hpp arg1)
  set(HEADER_FILE "${arg1}.hpp")
  file(WRITE ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    foreach(HEADER ${HPP_FILES}) 
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
  endif()
endmacro(mkheader_hpp)
